<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
  targetNamespace="http://www.microsoft.com/xml/schema/linq"
  xmlns:linq="http://www.microsoft.com/xml/schema/linq" version="3">
  <xs:element name="Configuration">
    <xs:annotation>
      <xs:documentation>The root element.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="linq:CodeGeneration"/>
        <xs:element ref="linq:Namespaces"/>
        <xs:element ref="linq:NullableReferences" minOccurs="0"/>
        <xs:element ref="linq:Validation" minOccurs="0"/>
        <xs:element ref="linq:Transformation" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CodeGeneration">
    <xs:complexType>
      <xs:sequence maxOccurs="1">
        <xs:element name="UseDateOnly" type="xs:boolean" default="false">
          <xs:annotation>
            <xs:documentation>Generate .net 6 DateOnly type for xs:date</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="UseTimeOnly" type="xs:boolean" default="false">
          <xs:annotation>
            <xs:documentation>Generate .net 6 TimeOnly type for xs:time</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="NullableReferences" type="xs:boolean" default="false">
          <xs:annotation>
            <xs:documentation>Generates C# 8 nullable references.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="SplitCodeFiles">
          <xs:complexType>
            <xs:attribute name="By">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="Class">
                    <xs:annotation><xs:documentation>Split the generated code into individual files by class.</xs:documentation></xs:annotation>
                  </xs:enumeration>
                  <xs:enumeration value="Namespace">
                    <xs:annotation><xs:documentation>Split the generated code into individual files by namespace.</xs:documentation></xs:annotation>
                  </xs:enumeration>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Namespaces">
    <xs:annotation>
      <xs:documentation>Lists child Namespace elements.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence maxOccurs="1">
        <xs:element ref="linq:Namespace" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Namespace">
    <xs:annotation>
      <xs:documentation>Element that maps an XML namespace (which is usually a URL or URI, sometimes a URN) to a .NET CLR namespace.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="Clr" use="required" type="xs:NCName">
        <xs:annotation>
          <xs:documentation>The CLR namespace to contain the generated types under.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Schema" use="required" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>The XML namespaces to map to CLR namepsace.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="DefaultVisibility">
        <xs:annotation>
          <xs:documentation>This changes the default visibility of the generated types. No value for this implies a default value of 'public'. The only other acceptable value is 'internal'.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="public"/>
            <xs:enumeration value="internal"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="File" type="xs:string">
        <xs:annotation>
          <xs:documentation>Filename of C# generated file for this CLR namespace, when using SplitCodeFiles.By=Namespace.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="NullableReferences" type="xs:boolean" default="0">
    <xs:annotation>
      <xs:documentation>Generates C# 8 nullable references. [Obsolete, use CodeGeneration/NullableReferences instead.]</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Validation">
    <xs:annotation>
      <xs:documentation>So there is code that interprets and looks for this element, but it is not documented as to what this does. Unknown as to what it currently does.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="linq:VerifyRequired"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyRequired" type="xs:boolean" default="0">
    <xs:annotation>
      <xs:documentation>Currently unknown what this does. It is referenced in the 'ClrBasePropertyInfo' class in the XObjects code.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="Transformation">
    <xs:annotation>
      <xs:documentation>Referenced in 'LinqToXsdSettings' class which then chucks it to 'FxtLinq2XsdInterpreter' class. Unknown purpose.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="linq:Deanonymize"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Deanonymize">
    <xs:annotation>
      <xs:documentation>Used by 'FxtDeanonymize' class. Unknown purpose.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="strict" use="optional" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
