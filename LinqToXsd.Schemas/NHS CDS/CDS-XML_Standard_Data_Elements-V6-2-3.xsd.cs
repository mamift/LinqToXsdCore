//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace www.nhsia.nhs.uk.DataStandards.XMLschema.CDS.ns.StandardDataElements {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.IO;
    using System.Linq;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Linq;
    using Xml.Schema.Linq;
    
    
    public sealed class AlphaNumeric_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), null);
        
        private AlphaNumeric_Type() {
        }
    }
    
    public sealed class Date_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private Date_Type() {
        }
    }
    
    public sealed class DateOfBirth_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(592954560000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private DateOfBirth_Type() {
        }
    }
    
    public sealed class Time_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private Time_Type() {
        }
    }
    
    public sealed class DateTimeStamp {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.DateTime), null);
        
        private DateTimeStamp() {
        }
    }
    
    public sealed class Integer_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Integer), null);
        
        private Integer_Type() {
        }
    }
    
    public sealed class PositiveInteger_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), null);
        
        private PositiveInteger_Type() {
        }
    }
    
    public sealed class Number9NonNegative_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 1, XmlSchemaWhiteSpace.Collapse));
        
        private Number9NonNegative_Type() {
        }
    }
    
    public sealed class Number9Positive_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 1, XmlSchemaWhiteSpace.Collapse));
        
        private Number9Positive_Type() {
        }
    }
    
    public sealed class Number99NonNegative_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 2, XmlSchemaWhiteSpace.Collapse));
        
        private Number99NonNegative_Type() {
        }
    }
    
    public sealed class Number99Positive_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 2, XmlSchemaWhiteSpace.Collapse));
        
        private Number99Positive_Type() {
        }
    }
    
    public sealed class Number999NonNegative_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private Number999NonNegative_Type() {
        }
    }
    
    public sealed class Number999Positive_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private Number999Positive_Type() {
        }
    }
    
    public sealed class Number9999NonNegative_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 4, XmlSchemaWhiteSpace.Collapse));
        
        private Number9999NonNegative_Type() {
        }
    }
    
    public sealed class Number9999Positive_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 4, XmlSchemaWhiteSpace.Collapse));
        
        private Number9999Positive_Type() {
        }
    }
    
    public sealed class Number99999NonNegative_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 5, XmlSchemaWhiteSpace.Collapse));
        
        private Number99999NonNegative_Type() {
        }
    }
    
    public sealed class Number99999Positive_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 5, XmlSchemaWhiteSpace.Collapse));
        
        private Number99999Positive_Type() {
        }
    }
    
    public sealed class Number999p999_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(3080)), null, 3, 0, null, null, 0, null, null, 0, new string[] {
                        "\\d{3}\\.\\d{3}"}, 7, XmlSchemaWhiteSpace.Collapse));
        
        private Number999p999_Type() {
        }
    }
    
    public sealed class ICD_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 6, null, null, 4, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ICD_Type() {
        }
    }
    
    public sealed class ConsultantCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 8, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ConsultantCode_Type() {
        }
    }
    
    public sealed class GMP_Code_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 8, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private GMP_Code_Type() {
        }
    }
    
    public sealed class OPCS_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 4, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OPCS_Type() {
        }
    }
    
    public sealed class PCT_Code_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PCT_Code_Type() {
        }
    }
    
    public sealed class OrgCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OrgCode_Type() {
        }
    }
    
    public sealed class PersonName_StructuredWord_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 35, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PersonName_StructuredWord_Type() {
        }
    }
    
    public sealed class PersonName_UnstructuredText_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 70, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PersonName_UnstructuredText_Type() {
        }
    }
    
    public sealed class PracticeCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PracticeCode_Type() {
        }
    }
    
    public sealed class READ_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 5, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private READ_Type() {
        }
    }
    
    public sealed class ReferrerCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 8, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ReferrerCode_Type() {
        }
    }
    
    public sealed class ReferringOrganisationCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ReferringOrganisationCode_Type() {
        }
    }
    
    public sealed class StructuredAddress_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 35, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private StructuredAddress_Type() {
        }
    }
    
    public sealed class UnstructuredAddress_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 175, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private UnstructuredAddress_Type() {
        }
    }
    
    public sealed class VGPFreeText_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 70, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private VGPFreeText_Type() {
        }
    }
    
    public sealed class VGPIdentityNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 35, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private VGPIdentityNumber_Type() {
        }
    }
    
    public sealed class VGPPartyIdentifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 35, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private VGPPartyIdentifier_Type() {
        }
    }
    
    public sealed class VGPSequenceNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 5, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private VGPSequenceNumber_Type() {
        }
    }
    
    public sealed class CDSTypesFinished_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "120",
                        "130",
                        "140"}, 0, 0, null, null, 3, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSTypesFinished_Type() {
        }
    }
    
    public sealed class CDSTypesUnFinished_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "180",
                        "190",
                        "200"}, 0, 0, null, null, 3, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSTypesUnFinished_Type() {
        }
    }
    
    public sealed class CDSTypesEALEDP100110_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "100",
                        "110"}, 0, 0, null, null, 3, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSTypesEALEDP100110_Type() {
        }
    }
    
    public sealed class CDSTypesEALEOP040050_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "040",
                        "050"}, 0, 0, null, null, 3, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSTypesEALEOP040050_Type() {
        }
    }
    
    public sealed class CriticalCareUnitFunction_Adult_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "05",
                        "06",
                        "07",
                        "08",
                        "09",
                        "10",
                        "11",
                        "12",
                        "90",
                        "91"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareUnitFunction_Adult_Type() {
        }
    }
    
    public sealed class CriticalCareUnitFunction_Neonatal_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "13",
                        "14",
                        "15"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareUnitFunction_Neonatal_Type() {
        }
    }
    
    public sealed class CriticalCareUnitFunction_Paediatric_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "04",
                        "16",
                        "17",
                        "18",
                        "19",
                        "92"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareUnitFunction_Paediatric_Type() {
        }
    }
    
    public sealed class NHSNumberStatusIndicatorCode_Withheld_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private NHSNumberStatusIndicatorCode_Withheld_Type() {
        }
    }
    
    public sealed class NHSNumberStatusIndicatorCode_Verified_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private NHSNumberStatusIndicatorCode_Verified_Type() {
        }
    }
    
    public sealed class NHSNumberStatusIndicatorCode_Unverified_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private NHSNumberStatusIndicatorCode_Unverified_Type() {
        }
    }
    
    public sealed class AAndEArrivalModeCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndEArrivalModeCode_Type() {
        }
    }
    
    public sealed class AAndEAttendanceCategoryCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndEAttendanceCategoryCode_Type() {
        }
    }
    
    public sealed class AAndEAttendanceConclusionTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AAndEAttendanceConclusionTime_Type() {
        }
    }
    
    public sealed class AAndEAttendanceDisposalCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "10",
                        "11",
                        "12",
                        "13",
                        "14"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndEAttendanceDisposalCode_Type() {
        }
    }
    
    public sealed class AAndEAttendanceNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndEAttendanceNumber_Type() {
        }
    }
    
    public sealed class AAndEDepartmentType_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndEDepartmentType_Type() {
        }
    }
    
    public sealed class AAndEDepartureTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AAndEDepartureTime_Type() {
        }
    }
    
    public sealed class AAndEDiagnosis_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 6, null, null, 2, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndEDiagnosis_Type() {
        }
    }
    
    public sealed class AAndEIncidentLocationType_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "10",
                        "40",
                        "50",
                        "60",
                        "91"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndEIncidentLocationType_Type() {
        }
    }
    
    public sealed class AAndEInitialAssessmentTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AAndEInitialAssessmentTime_Type() {
        }
    }
    
    public sealed class AAndEInvestigation_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 6, null, null, 2, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndEInvestigation_Type() {
        }
    }
    
    public sealed class AAndEPatientGroup_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "10",
                        "20",
                        "30",
                        "40",
                        "50",
                        "60",
                        "70",
                        "80"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndEPatientGroup_Type() {
        }
    }
    
    public sealed class AAndEStaffMemberCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 3, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndEStaffMemberCode_Type() {
        }
    }
    
    /// <summary>
    /// <para>
    /// V5-0:  (December 2005) Was numeric 4 digits 0000 - 2359  now uses XML standard hh:mm:ss format  (.sss is optional)
    /// </para>
    /// </summary>
    public sealed class AAndETimeSeenForTreatment_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AAndETimeSeenForTreatment_Type() {
        }
    }
    
    /// <summary>
    /// <para>
    /// V6:0  Length = min 2, max 6
    /// </para>
    /// </summary>
    public sealed class AAndETreatment_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 6, null, null, 2, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AAndETreatment_Type() {
        }
    }
    
    public sealed class ActivityDate_CriticalCare_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private ActivityDate_CriticalCare_Type() {
        }
    }
    
    public sealed class AdministrativeCategoryCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "98",
                        "99"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AdministrativeCategoryCode_Type() {
        }
    }
    
    public sealed class AdministrativeCategoryCode_HospitalProviderSpell_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "98",
                        "99"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AdministrativeCategoryCode_HospitalProviderSpell_Type() {
        }
    }
    
    public sealed class AdmissionMethodCode_HospitalProviderSpell_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "2A",
                        "2B",
                        "2C",
                        "2D",
                        "11",
                        "12",
                        "13",
                        "21",
                        "22",
                        "23",
                        "24",
                        "25",
                        "28",
                        "31",
                        "32",
                        "81",
                        "82",
                        "83",
                        "98",
                        "99"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AdmissionMethodCode_HospitalProviderSpell_Type() {
        }
    }
    
    public sealed class AdmissionOfferOutcomeCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AdmissionOfferOutcomeCode_Type() {
        }
    }
    
    public sealed class AdvancedCardiovascularSupportDays_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private AdvancedCardiovascularSupportDays_Type() {
        }
    }
    
    public sealed class AdvancedRespiratorySupportDays_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private AdvancedRespiratorySupportDays_Type() {
        }
    }
    
    public sealed class AgeAtCDSActivityDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private AgeAtCDSActivityDate_Type() {
        }
    }
    
    public sealed class AgeAtCensus_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private AgeAtCensus_Type() {
        }
    }
    
    public sealed class AgeOnAdmission_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private AgeOnAdmission_Type() {
        }
    }
    
    public sealed class IntendedAgeGroup_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private IntendedAgeGroup_Type() {
        }
    }
    
    public sealed class AnaestheticGivenDuringLabourOrDeliveryCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AnaestheticGivenDuringLabourOrDeliveryCode_Type() {
        }
    }
    
    public sealed class AnaestheticGivenPostLabourOrDeliveryCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AnaestheticGivenPostLabourOrDeliveryCode_Type() {
        }
    }
    
    public sealed class AppointmentDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AppointmentDate_Type() {
        }
    }
    
    public sealed class ArrivalDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private ArrivalDate_Type() {
        }
    }
    
    public sealed class ArrivalTimeAtAAndE_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private ArrivalTimeAtAAndE_Type() {
        }
    }
    
    public sealed class AttendanceIdentifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AttendanceIdentifier_Type() {
        }
    }
    
    public sealed class AttendedOrDidNotAttendCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "0",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AttendedOrDidNotAttendCode_Type() {
        }
    }
    
    public sealed class BasicCardiovascularSupportDays_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private BasicCardiovascularSupportDays_Type() {
        }
    }
    
    public sealed class BasicRespiratorySupportDays_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private BasicRespiratorySupportDays_Type() {
        }
    }
    
    public sealed class BirthOrder_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 1, XmlSchemaWhiteSpace.Collapse));
        
        private BirthOrder_Type() {
        }
    }
    
    public sealed class BirthWeight_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 4, XmlSchemaWhiteSpace.Collapse));
        
        private BirthWeight_Type() {
        }
    }
    
    public sealed class CarerSupportIndicator_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CarerSupportIndicator_Type() {
        }
    }
    
    public sealed class CDSActivityDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSActivityDate_Type() {
        }
    }
    
    public sealed class CDSApplicableDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSApplicableDate_Type() {
        }
    }
    
    public sealed class CDSApplicableTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSApplicableTime_Type() {
        }
    }
    
    public sealed class CDSBulkReplacementGroupCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "160"}, 0, 0, null, null, 3, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSBulkReplacementGroupCode_Type() {
        }
    }
    
    public sealed class CDSExtractDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSExtractDate_Type() {
        }
    }
    
    public sealed class CDSExtractTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSExtractTime_Type() {
        }
    }
    
    public sealed class CDSInterchangeApplicationReference_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 14, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSInterchangeApplicationReference_Type() {
        }
    }
    
    public sealed class CDSInterchangeControlCount_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(64)), null, 0, 0, null, 99999999999999m, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSInterchangeControlCount_Type() {
        }
    }
    
    public sealed class CDSInterchangeControlReference_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 14, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSInterchangeControlReference_Type() {
        }
    }
    
    public sealed class CDSInterchangeDateOfPreparation_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSInterchangeDateOfPreparation_Type() {
        }
    }
    
    public sealed class CDSInterchangeReceiverIdentity_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 15, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSInterchangeReceiverIdentity_Type() {
        }
    }
    
    public sealed class CDSInterchangeSenderIdentity_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 15, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSInterchangeSenderIdentity_Type() {
        }
    }
    
    public sealed class CDSInterchangeTestIndicator_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 1, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSInterchangeTestIndicator_Type() {
        }
    }
    
    public sealed class CDSInterchangeTimeOfPreparation_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSInterchangeTimeOfPreparation_Type() {
        }
    }
    
    public sealed class CDSMessageRecordIdentifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 35, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSMessageRecordIdentifier_Type() {
        }
    }
    
    public sealed class CDSMessageReferenceNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(64)), null, 0, 0, null, 99999999999999m, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSMessageReferenceNumber_Type() {
        }
    }
    
    public sealed class CDSMessageType_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "NHSCDS"}, 0, 0, null, null, 6, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSMessageType_Type() {
        }
    }
    
    public sealed class CDSMessageVersionNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "CDS062"}, 0, 0, null, null, 8, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSMessageVersionNumber_Type() {
        }
    }
    
    public sealed class CDSOrganisationIdentifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 5, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSOrganisationIdentifier_Type() {
        }
    }
    
    public sealed class CDSSender_Identifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 5, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSSender_Identifier_Type() {
        }
    }
    
    public sealed class CDSRecipient_Identifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 5, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSRecipient_Identifier_Type() {
        }
    }
    
    public sealed class CDSProtocolIdentifierCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "010",
                        "020"}, 0, 0, null, null, 3, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSProtocolIdentifierCode_Type() {
        }
    }
    
    public sealed class CDSReportPeriodEndDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSReportPeriodEndDate_Type() {
        }
    }
    
    public sealed class CDSReportPeriodStartDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CDSReportPeriodStartDate_Type() {
        }
    }
    
    public sealed class CDSTypeCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "011"}, 0, 0, null, null, 3, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSTypeCode_Type() {
        }
    }
    
    public sealed class CDSUniqueIdentifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 35, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSUniqueIdentifier_Type() {
        }
    }
    
    public sealed class CDSUpdateType_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "1",
                        "9"}, 0, 0, null, null, 1, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CDSUpdateType_Type() {
        }
    }
    
    public sealed class CommissionerReferenceNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 17, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CommissionerReferenceNumber_Type() {
        }
    }
    
    public sealed class CommissioningSerialNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 6, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CommissioningSerialNumber_Type() {
        }
    }
    
    public sealed class CountOfDaysSuspended_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 4, XmlSchemaWhiteSpace.Collapse));
        
        private CountOfDaysSuspended_Type() {
        }
    }
    
    public sealed class CriticalCareActivityCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08",
                        "09",
                        "10",
                        "11",
                        "12",
                        "13",
                        "14",
                        "15",
                        "16",
                        "21",
                        "22",
                        "23",
                        "24",
                        "25",
                        "26",
                        "27",
                        "28",
                        "29",
                        "50",
                        "51",
                        "52",
                        "53",
                        "55",
                        "56",
                        "57",
                        "58",
                        "59",
                        "60",
                        "61",
                        "62",
                        "63",
                        "64",
                        "65",
                        "66",
                        "67",
                        "68",
                        "69",
                        "70",
                        "71",
                        "72",
                        "73",
                        "74",
                        "99"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareActivityCode_Type() {
        }
    }
    
    public sealed class CriticalCareAdmissionSource_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareAdmissionSource_Type() {
        }
    }
    
    public sealed class CriticalCareAdmissionType_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareAdmissionType_Type() {
        }
    }
    
    public sealed class CriticalCareDischargeDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CriticalCareDischargeDate_Type() {
        }
    }
    
    public sealed class CriticalCareDischargeDestination_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareDischargeDestination_Type() {
        }
    }
    
    public sealed class CriticalCareDischargeLocation_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08",
                        "09",
                        "10"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareDischargeLocation_Type() {
        }
    }
    
    public sealed class CriticalCareDischargeReadyDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CriticalCareDischargeReadyDate_Type() {
        }
    }
    
    public sealed class CriticalCareDischargeReadyTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CriticalCareDischargeReadyTime_Type() {
        }
    }
    
    public sealed class CriticalCareDischargeStatus_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08",
                        "09",
                        "10",
                        "11"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareDischargeStatus_Type() {
        }
    }
    
    public sealed class CriticalCareDischargeTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CriticalCareDischargeTime_Type() {
        }
    }
    
    public sealed class CriticalCareLevel2Days_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private CriticalCareLevel2Days_Type() {
        }
    }
    
    public sealed class CriticalCareLevel3Days_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private CriticalCareLevel3Days_Type() {
        }
    }
    
    public sealed class CriticalCareLocalIdentifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 8, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareLocalIdentifier_Type() {
        }
    }
    
    public sealed class CriticalCareSourceLocation_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08",
                        "09",
                        "10",
                        "11",
                        "12"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareSourceLocation_Type() {
        }
    }
    
    public sealed class CriticalCareStartDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CriticalCareStartDate_Type() {
        }
    }
    
    public sealed class CriticalCareStartTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private CriticalCareStartTime_Type() {
        }
    }
    
    public sealed class CriticalCareUnitBedConfiguration_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "02",
                        "03",
                        "05",
                        "90"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CriticalCareUnitBedConfiguration_Type() {
        }
    }
    
    public sealed class DateDetentionCommenced_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private DateDetentionCommenced_Type() {
        }
    }
    
    public sealed class DecidedToAdmitDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private DecidedToAdmitDate_Type() {
        }
    }
    
    public sealed class DeliveryDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private DeliveryDate_Type() {
        }
    }
    
    public sealed class DeliveryMethodCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private DeliveryMethodCode_Type() {
        }
    }
    
    public sealed class DeliveryPlaceChangeReasonCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private DeliveryPlaceChangeReasonCode_Type() {
        }
    }
    
    public sealed class DeliveryPlaceTypeCode_Actual_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private DeliveryPlaceTypeCode_Actual_Type() {
        }
    }
    
    public sealed class DeliveryPlaceTypeCode_Intended_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private DeliveryPlaceTypeCode_Intended_Type() {
        }
    }
    
    public sealed class DermatologicalSupportDays_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private DermatologicalSupportDays_Type() {
        }
    }
    
    public sealed class DetainedAndOrLongTermPsychiatricCensusDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private DetainedAndOrLongTermPsychiatricCensusDate_Type() {
        }
    }
    
    public sealed class DiagnosisSchemeInUse_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "04",
                        "05"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private DiagnosisSchemeInUse_Type() {
        }
    }
    
    public sealed class DischargeDate_HospitalProviderSpell_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private DischargeDate_HospitalProviderSpell_Type() {
        }
    }
    
    public sealed class DischargeDestinationCode_HospitalProviderSpell_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "19",
                        "29",
                        "30",
                        "37",
                        "38",
                        "48",
                        "49",
                        "50",
                        "51",
                        "52",
                        "53",
                        "54",
                        "65",
                        "66",
                        "79",
                        "84",
                        "85",
                        "87",
                        "88",
                        "98",
                        "99"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private DischargeDestinationCode_HospitalProviderSpell_Type() {
        }
    }
    
    public sealed class DischargeMethodCode_HospitalProviderSpell_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private DischargeMethodCode_HospitalProviderSpell_Type() {
        }
    }
    
    public sealed class DischargeReadyDate_HospitalProviderSpell_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private DischargeReadyDate_HospitalProviderSpell_Type() {
        }
    }
    
    public sealed class DurationOfCareToPsychiatricCensusDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 5, XmlSchemaWhiteSpace.Collapse));
        
        private DurationOfCareToPsychiatricCensusDate_Type() {
        }
    }
    
    public sealed class DurationOfDetention_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 5, XmlSchemaWhiteSpace.Collapse));
        
        private DurationOfDetention_Type() {
        }
    }
    
    public sealed class DurationOfElectiveWait_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 4, XmlSchemaWhiteSpace.Collapse));
        
        private DurationOfElectiveWait_Type() {
        }
    }
    
    public sealed class EarliestReasonableOfferDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private EarliestReasonableOfferDate_Type() {
        }
    }
    
    public sealed class ElectiveAdmissionListEntryNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ElectiveAdmissionListEntryNumber_Type() {
        }
    }
    
    public sealed class ElectiveAdmissionListRemovalDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private ElectiveAdmissionListRemovalDate_Type() {
        }
    }
    
    public sealed class ElectiveAdmissionListRemovalReasonCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ElectiveAdmissionListRemovalReasonCode_Type() {
        }
    }
    
    public sealed class ElectiveAdmissionListStatus_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "99"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ElectiveAdmissionListStatus_Type() {
        }
    }
    
    public sealed class ElectiveAdmissionTypeCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "11",
                        "12",
                        "13"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ElectiveAdmissionTypeCode_Type() {
        }
    }
    
    public sealed class EndDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private EndDate_Type() {
        }
    }
    
    public sealed class EndDate_Episode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private EndDate_Episode_Type() {
        }
    }
    
    public sealed class EpisodeNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 2, XmlSchemaWhiteSpace.Collapse));
        
        private EpisodeNumber_Type() {
        }
    }
    
    public sealed class EthnicCategory_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(12)), null, 0, 0, null, null, 2, null, null, 0, new string[] {
                        "99",
                        "[ABCDEFGHJKLMNPRSZ]",
                        "[ABCDEFGHJKLMNPRSZ]."}, 0, XmlSchemaWhiteSpace.Preserve));
        
        private EthnicCategory_Type() {
        }
    }
    
    public sealed class EthnicCategory2021_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(4)), null, 0, 0, null, null, 3, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private EthnicCategory2021_Type() {
        }
    }
    
    public sealed class FirstAntenatalAssessmentDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private FirstAntenatalAssessmentDate_Type() {
        }
    }
    
    public sealed class FirstAttendanceCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private FirstAttendanceCode_Type() {
        }
    }
    
    public sealed class FirstRegularDayOrNightAdmissionCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "0",
                        "1"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private FirstRegularDayOrNightAdmissionCode_Type() {
        }
    }
    
    public sealed class GeneralMedicalPractitioner_AntenatalCare_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 8, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private GeneralMedicalPractitioner_AntenatalCare_Type() {
        }
    }
    
    public sealed class GeneralMedicalPractitioner_Specified_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 8, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private GeneralMedicalPractitioner_Specified_Type() {
        }
    }
    
    public sealed class GeneralPractice_PatientRegistration_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private GeneralPractice_PatientRegistration_Type() {
        }
    }
    
    public sealed class GeneralMedicalPractitionerPractice_AntenatalCare_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private GeneralMedicalPractitionerPractice_AntenatalCare_Type() {
        }
    }
    
    public sealed class GastroIntestinalSupportDays_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private GastroIntestinalSupportDays_Type() {
        }
    }
    
    public sealed class GestationLength_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1040)), new object[] {
                        10m,
                        11m,
                        12m,
                        13m,
                        14m,
                        15m,
                        16m,
                        17m,
                        18m,
                        19m,
                        20m,
                        21m,
                        22m,
                        23m,
                        24m,
                        25m,
                        26m,
                        27m,
                        28m,
                        29m,
                        30m,
                        31m,
                        32m,
                        33m,
                        34m,
                        35m,
                        36m,
                        37m,
                        38m,
                        39m,
                        40m,
                        41m,
                        42m,
                        43m,
                        44m,
                        45m,
                        46m,
                        47m,
                        48m,
                        49m,
                        99m}, 0, 0, null, null, 0, null, null, 0, null, 2, XmlSchemaWhiteSpace.Collapse));
        
        private GestationLength_Type() {
        }
    }
    
    public sealed class GestationLengthLabourOnset_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1040)), new object[] {
                        10m,
                        11m,
                        12m,
                        13m,
                        14m,
                        15m,
                        16m,
                        17m,
                        18m,
                        19m,
                        20m,
                        21m,
                        22m,
                        23m,
                        24m,
                        25m,
                        26m,
                        27m,
                        28m,
                        29m,
                        30m,
                        31m,
                        32m,
                        33m,
                        34m,
                        35m,
                        36m,
                        37m,
                        38m,
                        39m,
                        40m,
                        41m,
                        42m,
                        43m,
                        44m,
                        45m,
                        46m,
                        47m,
                        48m,
                        49m,
                        99m}, 0, 0, null, null, 0, null, null, 0, null, 2, XmlSchemaWhiteSpace.Collapse));
        
        private GestationLengthLabourOnset_Type() {
        }
    }
    
    public sealed class GestationLengthAssessment_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1040)), new object[] {
                        10m,
                        11m,
                        12m,
                        13m,
                        14m,
                        15m,
                        16m,
                        17m,
                        18m,
                        19m,
                        20m,
                        21m,
                        22m,
                        23m,
                        24m,
                        25m,
                        26m,
                        27m,
                        28m,
                        29m,
                        30m,
                        31m,
                        32m,
                        33m,
                        34m,
                        35m,
                        36m,
                        37m,
                        38m,
                        39m,
                        40m,
                        41m,
                        42m,
                        43m,
                        44m,
                        45m,
                        46m,
                        47m,
                        48m,
                        49m,
                        99m}, 0, 0, null, null, 0, null, null, 0, null, 2, XmlSchemaWhiteSpace.Collapse));
        
        private GestationLengthAssessment_Type() {
        }
    }
    
    public sealed class GuaranteedAdmissionDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private GuaranteedAdmissionDate_Type() {
        }
    }
    
    public sealed class HighCostDrugs_OPCS_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 4, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private HighCostDrugs_OPCS_Type() {
        }
    }
    
    public sealed class HospitalProviderSpellNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private HospitalProviderSpellNumber_Type() {
        }
    }
    
    public sealed class IntendedClinicalCareIntensityCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "11",
                        "12",
                        "13",
                        "21",
                        "22",
                        "31",
                        "32",
                        "33",
                        "41",
                        "42",
                        "43",
                        "51",
                        "52",
                        "53",
                        "61",
                        "62",
                        "63",
                        "71",
                        "72",
                        "81"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private IntendedClinicalCareIntensityCode_Type() {
        }
    }
    
    public sealed class IntendedManagementCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private IntendedManagementCode_Type() {
        }
    }
    
    public sealed class IntendedProcedureStatusCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private IntendedProcedureStatusCode_Type() {
        }
    }
    
    public sealed class IntendedSiteCode_OfTreatment_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private IntendedSiteCode_OfTreatment_Type() {
        }
    }
    
    public sealed class InvestigationSchemeInUse_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private InvestigationSchemeInUse_Type() {
        }
    }
    
    public sealed class LabourOrDeliveryOnsetMethodCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private LabourOrDeliveryOnsetMethodCode_Type() {
        }
    }
    
    public sealed class LastDNAOrPatientCancelledDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private LastDNAOrPatientCancelledDate_Type() {
        }
    }
    
    public sealed class LastEpisodeInSpellIndicatorCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private LastEpisodeInSpellIndicatorCode_Type() {
        }
    }
    
    public sealed class LegalStatusClassificationCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1040)), new object[] {
                        1m,
                        2m,
                        3m,
                        4m,
                        5m,
                        6m,
                        7m,
                        8m,
                        9m,
                        10m,
                        12m,
                        13m,
                        14m,
                        15m,
                        16m,
                        17m,
                        18m,
                        19m,
                        20m,
                        31m,
                        32m,
                        33m,
                        34m,
                        35m,
                        36m,
                        98m,
                        99m}, 0, 0, null, null, 0, null, null, 0, null, 2, XmlSchemaWhiteSpace.Collapse));
        
        private LegalStatusClassificationCode_Type() {
        }
    }
    
    public sealed class MentalHealthActLegalStatusClassificationCode_AtCensusDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08",
                        "09",
                        "10",
                        "12",
                        "13",
                        "14",
                        "15",
                        "16",
                        "17",
                        "18",
                        "19",
                        "20",
                        "31",
                        "32",
                        "34",
                        "35",
                        "36",
                        "37",
                        "38",
                        "98",
                        "99"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private MentalHealthActLegalStatusClassificationCode_AtCensusDate_Type() {
        }
    }
    
    public sealed class MentalHealthActLegalStatusClassificationCode_OnAdmission_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08",
                        "09",
                        "10",
                        "12",
                        "13",
                        "14",
                        "15",
                        "16",
                        "17",
                        "18",
                        "19",
                        "20",
                        "31",
                        "32",
                        "34",
                        "35",
                        "36",
                        "37",
                        "38",
                        "98",
                        "99"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private MentalHealthActLegalStatusClassificationCode_OnAdmission_Type() {
        }
    }
    
    public sealed class MentalHealthActLegalStatusClassificationCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08",
                        "09",
                        "10",
                        "12",
                        "13",
                        "14",
                        "15",
                        "16",
                        "17",
                        "18",
                        "19",
                        "20",
                        "31",
                        "32",
                        "34",
                        "35",
                        "36",
                        "37",
                        "38",
                        "98",
                        "99"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private MentalHealthActLegalStatusClassificationCode_Type() {
        }
    }
    
    public sealed class LiveOrStillBirthCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private LiveOrStillBirthCode_Type() {
        }
    }
    
    public sealed class LiverSupportDays_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private LiverSupportDays_Type() {
        }
    }
    
    public sealed class LocalPatientIdentifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 10, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private LocalPatientIdentifier_Type() {
        }
    }
    
    public sealed class LocationClass_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private LocationClass_Type() {
        }
    }
    
    public sealed class ActivityLocationType_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "A01",
                        "A02",
                        "A03",
                        "A04",
                        "B01",
                        "B02",
                        "C01",
                        "C02",
                        "C03",
                        "D01",
                        "D02",
                        "D03",
                        "E01",
                        "E02",
                        "E03",
                        "E04",
                        "E99",
                        "F01",
                        "G01",
                        "G02",
                        "G03",
                        "H01",
                        "J01",
                        "K01",
                        "K02",
                        "L01",
                        "L02",
                        "L03",
                        "L04",
                        "L05",
                        "L06",
                        "L99",
                        "M01",
                        "M02",
                        "M03",
                        "M04",
                        "M05",
                        "N01",
                        "N02",
                        "N03",
                        "N04",
                        "N05",
                        "X01"}, 0, 3, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ActivityLocationType_Type() {
        }
    }
    
    public sealed class CareProfessionalMainSpecialtyCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "100",
                        "101",
                        "110",
                        "120",
                        "130",
                        "140",
                        "141",
                        "142",
                        "143",
                        "145",
                        "146",
                        "147",
                        "148",
                        "149",
                        "150",
                        "160",
                        "170",
                        "171",
                        "180",
                        "190",
                        "192",
                        "300",
                        "301",
                        "302",
                        "303",
                        "304",
                        "305",
                        "310",
                        "311",
                        "312",
                        "313",
                        "314",
                        "315",
                        "320",
                        "321",
                        "330",
                        "340",
                        "350",
                        "352",
                        "360",
                        "361",
                        "370",
                        "371",
                        "400",
                        "401",
                        "410",
                        "420",
                        "421",
                        "430",
                        "450",
                        "460",
                        "501",
                        "502",
                        "560",
                        "600",
                        "601",
                        "700",
                        "710",
                        "711",
                        "712",
                        "713",
                        "715",
                        "800",
                        "810",
                        "820",
                        "821",
                        "822",
                        "823",
                        "824",
                        "830",
                        "831",
                        "900",
                        "901",
                        "902",
                        "903",
                        "904",
                        "950",
                        "960",
                        "199",
                        "499",
                        "325",
                        "326",
                        "451",
                        "504",
                        "833",
                        "834"}, 0, 3, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private CareProfessionalMainSpecialtyCode_Type() {
        }
    }
    
    public sealed class MedicalStaffTypeSeeingPatient_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "03",
                        "04",
                        "08",
                        "09"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private MedicalStaffTypeSeeingPatient_Type() {
        }
    }
    
    public sealed class MentalHealthAct2007_MentalCategory_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "A",
                        "B",
                        "5",
                        "8",
                        "9"}, 0, 0, null, null, 1, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private MentalHealthAct2007_MentalCategory_Type() {
        }
    }
    
    public sealed class NeonatalLevelOfCareCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "0",
                        "1",
                        "2",
                        "3",
                        "8",
                        "9"}, 0, 0, null, null, 1, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private NeonatalLevelOfCareCode_Type() {
        }
    }
    
    public sealed class NeurologicalSupportDays_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private NeurologicalSupportDays_Type() {
        }
    }
    
    public sealed class NHSNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "[0-9]{10}"}, 0, XmlSchemaWhiteSpace.Preserve));
        
        private NHSNumber_Type() {
        }
    }
    
    public sealed class NHSServiceAgreementChangeDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private NHSServiceAgreementChangeDate_Type() {
        }
    }
    
    public sealed class NHSServiceAgreementLineNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 10, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private NHSServiceAgreementLineNumber_Type() {
        }
    }
    
    public sealed class NumberOfBabiesIndicationCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private NumberOfBabiesIndicationCode_Type() {
        }
    }
    
    public sealed class OfferedForAdmissionDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private OfferedForAdmissionDate_Type() {
        }
    }
    
    public sealed class OperationStatusCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OperationStatusCode_Type() {
        }
    }
    
    public sealed class OrganisationCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OrganisationCode_Type() {
        }
    }
    
    public sealed class OrganisationSiteCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OrganisationSiteCode_Type() {
        }
    }
    
    public sealed class OrganisationCode_PatientPathwayIdentifierIssuer_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OrganisationCode_PatientPathwayIdentifierIssuer_Type() {
        }
    }
    
    public sealed class OrganSupportMaximum_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "00",
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OrganSupportMaximum_Type() {
        }
    }
    
    public sealed class OriginalDecidedToAdmitDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private OriginalDecidedToAdmitDate_Type() {
        }
    }
    
    public sealed class OutcomeOfAttendanceCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OutcomeOfAttendanceCode_Type() {
        }
    }
    
    public sealed class PatientClassificationCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "8"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PatientClassificationCode_Type() {
        }
    }
    
    public sealed class PatientPathwayIdentifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 20, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PatientPathwayIdentifier_Type() {
        }
    }
    
    public sealed class PersonBirthDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(592954560000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private PersonBirthDate_Type() {
        }
    }
    
    public sealed class PersonBirthDate_Baby_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(592954560000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private PersonBirthDate_Baby_Type() {
        }
    }
    
    public sealed class PersonGenderCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "0",
                        "1",
                        "2",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PersonGenderCode_Type() {
        }
    }
    
    public sealed class PersonGenderCodeCurrent_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "0",
                        "1",
                        "2",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PersonGenderCodeCurrent_Type() {
        }
    }
    
    public sealed class PersonGenderCodeCurrent_Baby_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "0",
                        "1",
                        "2",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PersonGenderCodeCurrent_Baby_Type() {
        }
    }
    
    public sealed class PersonMaritalStatus_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "8",
                        "9",
                        "D",
                        "M",
                        "N",
                        "P",
                        "S",
                        "W"}, 0, 0, null, null, 1, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PersonMaritalStatus_Type() {
        }
    }
    
    public sealed class PersonWeight_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Decimal), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(3080)), null, 3, 0, null, null, 0, null, null, 0, new string[] {
                        "\\d{3}\\.\\d{3}"}, 7, XmlSchemaWhiteSpace.Collapse));
        
        private PersonWeight_Type() {
        }
    }
    
    public sealed class PostcodeOfUsualAddress_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 8, null, null, 2, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PostcodeOfUsualAddress_Type() {
        }
    }
    
    public sealed class PregnancyTotalPreviousPregnancies_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "00",
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08",
                        "09",
                        "10",
                        "11",
                        "12",
                        "13",
                        "14",
                        "15",
                        "16",
                        "17",
                        "18",
                        "19",
                        "20",
                        "21",
                        "22",
                        "23",
                        "24",
                        "25",
                        "26",
                        "27",
                        "28",
                        "29",
                        "99"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PregnancyTotalPreviousPregnancies_Type() {
        }
    }
    
    public sealed class PrimaryDiagnosis_ICD_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 6, null, null, 4, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PrimaryDiagnosis_ICD_Type() {
        }
    }
    
    public sealed class PrimaryDiagnosis_READ_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 5, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PrimaryDiagnosis_READ_Type() {
        }
    }
    
    public sealed class PrimaryProcedure_OPCS_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 4, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PrimaryProcedure_OPCS_Type() {
        }
    }
    
    public sealed class PrimaryProcedure_READ_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 5, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PrimaryProcedure_READ_Type() {
        }
    }
    
    public sealed class PriorityTypeCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PriorityTypeCode_Type() {
        }
    }
    
    public sealed class ProcedureDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private ProcedureDate_Type() {
        }
    }
    
    public sealed class ProcedureSchemeInUse_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ProcedureSchemeInUse_Type() {
        }
    }
    
    public sealed class Procedure_OPCS_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 4, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private Procedure_OPCS_Type() {
        }
    }
    
    public sealed class Procedure_READ_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 5, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private Procedure_READ_Type() {
        }
    }
    
    public sealed class ProviderReferenceNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 17, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ProviderReferenceNumber_Type() {
        }
    }
    
    public sealed class PsychiatricPatientStatusCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "0",
                        "1",
                        "2",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PsychiatricPatientStatusCode_Type() {
        }
    }
    
    public sealed class ReferralRequestReceivedDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private ReferralRequestReceivedDate_Type() {
        }
    }
    
    public sealed class ReferralToTreatmentPeriod_EndDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private ReferralToTreatmentPeriod_EndDate_Type() {
        }
    }
    
    public sealed class ReferralToTreatmentPeriod_StartDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private ReferralToTreatmentPeriod_StartDate_Type() {
        }
    }
    
    public sealed class ReferralToTreatmentPeriod_Status_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "10",
                        "11",
                        "12",
                        "20",
                        "21",
                        "30",
                        "31",
                        "32",
                        "33",
                        "34",
                        "35",
                        "36",
                        "90",
                        "91",
                        "92",
                        "98",
                        "99"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ReferralToTreatmentPeriod_Status_Type() {
        }
    }
    
    public sealed class RenalSupportDays_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.NonNegativeInteger), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1024)), null, 0, 0, null, null, 0, null, null, 0, null, 3, XmlSchemaWhiteSpace.Collapse));
        
        private RenalSupportDays_Type() {
        }
    }
    
    public sealed class ResuscitationMethodCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ResuscitationMethodCode_Type() {
        }
    }
    
    public sealed class SecondaryDiagnosis_ICD_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 6, null, null, 4, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private SecondaryDiagnosis_ICD_Type() {
        }
    }
    
    public sealed class SecondaryDiagnosis_READ_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(1)), null, 0, 5, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private SecondaryDiagnosis_READ_Type() {
        }
    }
    
    public sealed class ServiceTypeRequestedCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ServiceTypeRequestedCode_Type() {
        }
    }
    
    public sealed class SexOfPatientsCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private SexOfPatientsCode_Type() {
        }
    }
    
    public sealed class SiteCodeOfTreatment_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private SiteCodeOfTreatment_Type() {
        }
    }
    
    public sealed class SourceOfAdmissionCode_HospitalProviderSpell_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "19",
                        "29",
                        "39",
                        "49",
                        "51",
                        "52",
                        "53",
                        "54",
                        "65",
                        "66",
                        "79",
                        "85",
                        "87",
                        "88",
                        "98",
                        "99"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private SourceOfAdmissionCode_HospitalProviderSpell_Type() {
        }
    }
    
    public sealed class SourceOfReferralForAAndE_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "00",
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "08",
                        "92",
                        "93"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private SourceOfReferralForAAndE_Type() {
        }
    }
    
    public sealed class SourceOfReferralForOut_Patients_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(20)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04",
                        "05",
                        "06",
                        "07",
                        "10",
                        "11",
                        "12",
                        "13",
                        "14",
                        "15",
                        "16",
                        "17",
                        "92",
                        "93",
                        "97"}, 0, 0, null, null, 2, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private SourceOfReferralForOut_Patients_Type() {
        }
    }
    
    public sealed class StartDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private StartDate_Type() {
        }
    }
    
    public sealed class StartDate_Episode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private StartDate_Episode_Type() {
        }
    }
    
    public sealed class StartDate_HospitalProviderSpell_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private StartDate_HospitalProviderSpell_Type() {
        }
    }
    
    public sealed class StatusOfPatientIncludedInThePsychiatricCensusCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private StatusOfPatientIncludedInThePsychiatricCensusCode_Type() {
        }
    }
    
    public sealed class StatusOfPersonConductingDeliveryCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private StatusOfPersonConductingDeliveryCode_Type() {
        }
    }
    
    public sealed class SuspensionStartDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private SuspensionStartDate_Type() {
        }
    }
    
    public sealed class SuspensionEndDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private SuspensionEndDate_Type() {
        }
    }
    
    public sealed class ActivityTreatmentFunctionCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "100",
                        "101",
                        "102",
                        "103",
                        "104",
                        "105",
                        "106",
                        "107",
                        "108",
                        "110",
                        "120",
                        "130",
                        "140",
                        "141",
                        "142",
                        "143",
                        "144",
                        "150",
                        "160",
                        "161",
                        "170",
                        "171",
                        "172",
                        "173",
                        "174",
                        "180",
                        "190",
                        "191",
                        "192",
                        "199",
                        "211",
                        "212",
                        "213",
                        "214",
                        "215",
                        "216",
                        "217",
                        "218",
                        "219",
                        "220",
                        "221",
                        "222",
                        "223",
                        "241",
                        "242",
                        "251",
                        "252",
                        "253",
                        "254",
                        "255",
                        "256",
                        "257",
                        "258",
                        "259",
                        "260",
                        "261",
                        "262",
                        "263",
                        "264",
                        "280",
                        "290",
                        "291",
                        "300",
                        "301",
                        "302",
                        "303",
                        "304",
                        "305",
                        "306",
                        "307",
                        "308",
                        "309",
                        "310",
                        "311",
                        "313",
                        "314",
                        "315",
                        "316",
                        "317",
                        "318",
                        "319",
                        "320",
                        "321",
                        "322",
                        "323",
                        "324",
                        "325",
                        "327",
                        "328",
                        "329",
                        "330",
                        "331",
                        "340",
                        "341",
                        "342",
                        "343",
                        "344",
                        "345",
                        "346",
                        "350",
                        "352",
                        "360",
                        "361",
                        "370",
                        "371",
                        "400",
                        "401",
                        "410",
                        "420",
                        "421",
                        "422",
                        "424",
                        "430",
                        "450",
                        "460",
                        "499",
                        "501",
                        "502",
                        "503",
                        "560",
                        "650",
                        "651",
                        "652",
                        "653",
                        "654",
                        "655",
                        "656",
                        "657",
                        "658",
                        "659",
                        "660",
                        "661",
                        "662",
                        "663",
                        "700",
                        "710",
                        "711",
                        "712",
                        "713",
                        "715",
                        "720",
                        "721",
                        "722",
                        "723",
                        "724",
                        "725",
                        "726",
                        "727",
                        "800",
                        "811",
                        "812",
                        "822",
                        "834",
                        "840",
                        "920"}, 0, 3, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ActivityTreatmentFunctionCode_Type() {
        }
    }
    
    public sealed class UBRN_Converted_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "[0-9]{12}"}, 0, XmlSchemaWhiteSpace.Preserve));
        
        private UBRN_Converted_Type() {
        }
    }
    
    public sealed class WaitingListEntryLastReviewedDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private WaitingListEntryLastReviewedDate_Type() {
        }
    }
    
    public sealed class WardDayPeriodAvailabilityCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private WardDayPeriodAvailabilityCode_Type() {
        }
    }
    
    public sealed class WardNightPeriodAvailabilityCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private WardNightPeriodAvailabilityCode_Type() {
        }
    }
    
    public sealed class LengthOfStayAdjustment_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Integer), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 999m, 0, null, 0m, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private LengthOfStayAdjustment_Type() {
        }
    }
    
    public sealed class LengthOfStayAdjustmentReason_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Integer), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(64)), null, 0, 0, null, 999m, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private LengthOfStayAdjustmentReason_Type() {
        }
    }
    
    public sealed class ConsultationMediumUsed_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "03",
                        "04"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ConsultationMediumUsed_Type() {
        }
    }
    
    public sealed class WardSecurityLevel_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "0",
                        "1",
                        "2",
                        "3"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private WardSecurityLevel_Type() {
        }
    }
    
    public sealed class WaitingTimeMeasurementType_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "09"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private WaitingTimeMeasurementType_Type() {
        }
    }
    
    public sealed class ClinicCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ClinicCode_Type() {
        }
    }
    
    public sealed class StartTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private StartTime_Type() {
        }
    }
    
    public sealed class EndTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private EndTime_Type() {
        }
    }
    
    public sealed class WardCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private WardCode_Type() {
        }
    }
    
    public sealed class StartTime_HospitalProviderSpell_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private StartTime_HospitalProviderSpell_Type() {
        }
    }
    
    public sealed class DischargeTime_HospitalProviderSpell_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private DischargeTime_HospitalProviderSpell_Type() {
        }
    }
    
    public sealed class AAndEInitialAssessmentDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AAndEInitialAssessmentDate_Type() {
        }
    }
    
    public sealed class AAndEDateSeenForTreatment_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AAndEDateSeenForTreatment_Type() {
        }
    }
    
    public sealed class AAndEAttendanceConclusionDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AAndEAttendanceConclusionDate_Type() {
        }
    }
    
    public sealed class AAndEDepartureDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AAndEDepartureDate_Type() {
        }
    }
    
    public sealed class WithheldIdentityReason_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "01",
                        "02",
                        "03",
                        "97",
                        "99"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private WithheldIdentityReason_Type() {
        }
    }
    
    public sealed class AppointmentTime_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private AppointmentTime_Type() {
        }
    }
    
    public sealed class StartTime_Episode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private StartTime_Episode_Type() {
        }
    }
    
    public sealed class EndTime_Episode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Time), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(8)), null, 0, 0, null, null, 0, null, null, 0, new string[] {
                        "([0-9]|[0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])"}, 0, XmlSchemaWhiteSpace.Collapse));
        
        private EndTime_Episode_Type() {
        }
    }
    
    public sealed class MultiProfOrDiscIndCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "3",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private MultiProfOrDiscIndCode_Type() {
        }
    }
    
    public sealed class DirectAccessReferralIndicator_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "Y",
                        "N",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private DirectAccessReferralIndicator_Type() {
        }
    }
    
    public sealed class PresentOnAdmissionIndicator_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "Y",
                        "N",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private PresentOnAdmissionIndicator_Type() {
        }
    }
    
    public sealed class DischargedToHospitalAtHomeServiceIndicator_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "Y",
                        "N",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private DischargedToHospitalAtHomeServiceIndicator_Type() {
        }
    }
    
    public sealed class AmbulanceIncidentNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 20, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private AmbulanceIncidentNumber_Type() {
        }
    }
    
    public sealed class OrganisationCodeConveyingAmbulanceTrust_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 3, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OrganisationCodeConveyingAmbulanceTrust_Type() {
        }
    }
    
    public sealed class ExpectedDurationOfAppointment_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Integer), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, 999m, 0, null, 0m, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private ExpectedDurationOfAppointment_Type() {
        }
    }
    
    public sealed class EarliestClinicallyAppropriateDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private EarliestClinicallyAppropriateDate_Type() {
        }
    }
    
    public sealed class OverseasVisitorStatusClassificationAtCDSActivityDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "8",
                        "9",
                        "P"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OverseasVisitorStatusClassificationAtCDSActivityDate_Type() {
        }
    }
    
    public sealed class OverseasVisitorClassification_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "1",
                        "2",
                        "3",
                        "4",
                        "8",
                        "9",
                        "P"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private OverseasVisitorClassification_Type() {
        }
    }
    
    public sealed class OverseasVisitorStatusStartDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private OverseasVisitorStatusStartDate_Type() {
        }
    }
    
    public sealed class OverseasVisitorStatusEndDate_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Date), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(320)), null, 0, 0, null, new System.DateTime(946391904000000000), 0, null, new System.DateTime(599266080000000000), 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private OverseasVisitorStatusEndDate_Type() {
        }
    }
    
    public sealed class sequenceNumber_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Integer), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(576)), null, 0, 0, null, 999m, 0, 1m, null, 0, null, 0, XmlSchemaWhiteSpace.Collapse));
        
        private sequenceNumber_Type() {
        }
    }
    
    public sealed class ProfessionalRegistrationIssuerCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "02",
                        "03",
                        "08",
                        "09"}, 0, 2, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ProfessionalRegistrationIssuerCode_Type() {
        }
    }
    
    public sealed class ProfessionalRegistrationEntryIdentifier_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 12, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private ProfessionalRegistrationEntryIdentifier_Type() {
        }
    }
    
    public sealed class LocalSubSpecialtyCode_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 8, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private LocalSubSpecialtyCode_Type() {
        }
    }
    
    public sealed class RehabilitationAssessmentTeamType_Type {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(17)), new object[] {
                        "1",
                        "2",
                        "8",
                        "9"}, 0, 1, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private RehabilitationAssessmentTeamType_Type() {
        }
    }
    
    public class LinqToXsdTypeManager : ILinqToXsdTypeManager {
        
        private static XmlSchemaSet schemaSet;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static LinqToXsdTypeManager typeManagerSingleton = new LinqToXsdTypeManager();
        
        static LinqToXsdTypeManager() {
        }
        
        private LinqToXsdTypeManager() {
        }
        
        XmlSchemaSet ILinqToXsdTypeManager.Schemas {
            get {
                if ((schemaSet == null)) {
                    XmlSchemaSet tempSet = new XmlSchemaSet();
                    System.Threading.Interlocked.CompareExchange(ref schemaSet, tempSet, null);
                }
                return schemaSet;
            }
            set {
                schemaSet = value;
            }
        }
        
        Dictionary<System.Xml.Linq.XName, System.Type> ILinqToXsdTypeManager.GlobalTypeDictionary {
            get {
                return XTypedServices.EmptyDictionary;
            }
        }
        
        Dictionary<System.Xml.Linq.XName, System.Type> ILinqToXsdTypeManager.GlobalElementDictionary {
            get {
                return XTypedServices.EmptyDictionary;
            }
        }
        
        Dictionary<System.Type, System.Type> ILinqToXsdTypeManager.RootContentTypeMapping {
            get {
                return XTypedServices.EmptyTypeMappingDictionary;
            }
        }
        
        public static LinqToXsdTypeManager Instance {
            get {
                return typeManagerSingleton;
            }
        }
        
        protected internal static void AddSchemas(XmlSchemaSet schemas) {
            schemas.Add(schemaSet);
        }
        
        public static System.Type GetRootType() {
            return typeof(Xml.Schema.Linq.XTypedElement);
        }
    }
    
    public partial class XRoot {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        
        private XRoot() {
        }
        
        public virtual XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public virtual XTypedElement Root {
            get {
                return rootObject;
            }
        }
        
        public static XRoot Load(string xmlFile) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(string xmlFile, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(XmlReader xmlReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
}
