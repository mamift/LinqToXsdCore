<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by XML Authority. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<schema xmlns = "http://www.w3.org/2001/XMLSchema"
	 targetNamespace = "PINSTypesv06.xsd"
	 xmlns:pType = "PINSTypesv06.xsd"
	 xmlns:mdc = "mdcesv02.xsd"
	 xmlns:bs7666 = "http://GovTalk/Schemas/ChangeOfAddress00f.xsd"
	 xmlns:xlink = "http://www.w3.org/1999/xlink"
	 xmlns:mpak = "modifiedgmlpacket.xsd"
	 xmlns:xsd = "http://www.w3.org/2001/XMLSchema"
	 version = ""
	 elementFormDefault = "qualified">
	<import namespace = "mdcesv02.xsd" schemaLocation = "mdcesv02.xsd"/>
	<import namespace = "http://GovTalk/Schemas/ChangeOfAddress00f.xsd" schemaLocation = "BS7666Schema3.xsd"/>
	<import namespace = "http://www.w3.org/1999/xlink" schemaLocation = "xlinks.xsd"/>
	<import namespace = "modifiedgmlpacket.xsd" schemaLocation = "modifiedgmlpacket.xsd"/>
	<annotation>
		<documentation>This schema defines all the structures and contents to be reused by the various 'headline' schema within the Planning Portal Programme (these include schemas for applications, appeals, development plans and contact directory records). This schema was developed by Cap Gemini Ernst and Young.

This schema was designed to be compliant (as far as practical) with the e-GIF guidelines and the best practice advice of the Office of the e-Envoy in respect of Schema design. This includes the addition of documentation entries within the schema.

This schema makes use of external schemas. The documentation of elements and attributes defined externally is included within the external schemas.

Understanding of this and related schemas is facilitated by associated documentation which describe the overall schema set, the function of individual schemas and the underlying data models. Specifically this includes a definition of schema architecture (PINS Data Interchange ArchitectureV01.doc) and the UML data models underpinning this schema (Contactv01.mdl; DevPlanv01.mdl; GeneralDocv01.mdl; ApplicationAndAppealv01.mdl). These resources were developed by Cap Gemini Ernst and Young and are owned by the Planning Portal Programme. It is recommended that these resources are accessed to maximise the understanding of this and related schemas, these are available from the Planning Portal Programme.
</documentation>
	</annotation>
	<!--Generated by XML Authority. Conforms to w3c http://www.w3.org/2000/10/XMLSchema-->
	
	<element name = "InternalDocumentLink">
		<annotation>
			<documentation>Container for an internal document link (linking to elsewhere within the document). 
Note this element follows the convention that where contents are data typed to ID or IDREF this is declared within an attribute, this means this element is empty but has the attribute InternalDocumentRef associated with it</documentation>
		</annotation>
		<complexType>
			<attribute name = "InternalDocumentRef" use = "required" type = "IDREF">
				<annotation>
					<documentation>Link to a different part of the current document. Note the linked information should have a document nature</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "InternalComponentLink">
		<annotation>
			<documentation>Container for an internal link (linking to within the same document) to an item with a non-document nature, for example a geospatial component. 
Note this element follows the convention that where contents are data typed to ID or IDREF this is declared within an attribute, this means this element is empty but has the attribute InternalComponentRef associated with it</documentation>
		</annotation>
		<complexType>
			<attribute name = "InternalComponentRef" use = "required" type = "IDREF">
				<annotation>
					<documentation>Link to a different part of the current document. Note the linked information should have a non-document nature, for example this may by a geospatial component</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<complexType name = "InternalRef">
		<annotation>
			<documentation>Complex type defined to allow reference to a component elsewhere within the schema. This uses the standard IDREF data type for references.</documentation>
		</annotation>
		<choice>
			<element ref = "pType:InternalDocumentLink"/>
			<element ref = "pType:InternalComponentLink"/>
		</choice>
	</complexType>
	<complexType name = "ExternalLink">
		<annotation>
			<documentation>Provides a mechanism to provide a link to a component outside of the schema either by an active 'on-line' method which can be utilised by software or by means of a textual reference.</documentation>
		</annotation>
		<choice>
			<element ref = "pType:ExternalOnLineLink"/>
			<element ref = "pType:ExternalOffLineLink"/>
		</choice>
	</complexType>
	<complexType name = "PINSGenericDocComponent">
		<annotation>
			<documentation>Complex type defined to hold the elements required to define a component of a document as defined with the Planning Portal Programme. This structure allows a document component to be stored using the commonly used document elements (e.g. headings, paragraphs, ordered lists, unordered lists, graphics etc.)</documentation>
		</annotation>
		<sequence>
			<element ref = "pType:Heading" minOccurs = "0"/>
			<element ref = "pType:MainBody"/>
		</sequence>
		<attribute ref = "pType:Identifier"/>
	</complexType>
	<element name = "ExternalOnLineLink" type = "string">
		<annotation>
			<documentation>Container for a link to an external on-line resource (i.e. digital and referenceable) which is not part of the current document</documentation>
		</annotation>
	</element>
	<element name = "ExternalOffLineLink" type = "string">
		<annotation>
			<documentation>Link to an external off-line resource (i.e. either non-digital and/or non-referenceable) which is not part of the current document</documentation>
		</annotation>
	</element>
	<element name = "Email">
		<annotation>
			<documentation>E-mail address of a Contact/Participant</documentation>
		</annotation>
		<simpleType>
			<restriction base = "string">
				<maxLength value = "256"/>
			</restriction>
		</simpleType>
	</element>
	<element name = "InternationalCode" type = "integer" default = "44">
		<annotation>
			<documentation>International telephone code (prefix) for a Contact/Participant. For example for a British telephone number this would be 44</documentation>
		</annotation>
	</element>
	<element name = "NationalTelCode" type = "integer">
		<annotation>
			<documentation>National telephone code for a Contact/Participant. For example for a Birmingham telephone number this would be 0121</documentation>
		</annotation>
	</element>
	<element name = "LocalTelNo" type = "integer">
		<annotation>
			<documentation>Local telephone number for a Contact/Participant</documentation>
		</annotation>
	</element>
	<element name = "ExtensionNo" type = "integer">
		<annotation>
			<documentation>Extension of telephone numberfor a Contact/Participant</documentation>
		</annotation>
	</element>
	<complexType name = "LineNo">
		<annotation>
			<documentation>Comple Type defined to contain the elements required to hold a telephone or fax number</documentation>
		</annotation>
		<sequence>
			<element ref = "pType:InternationalCode"/>
			<element ref = "pType:NationalTelCode"/>
			<element ref = "pType:LocalTelNo"/>
			<element ref = "pType:ExtensionNo" minOccurs = "0"/>
		</sequence>
	</complexType>
	<element name = "ExternalAddress" type = "bs7666:BSaddressStructure">
		<annotation>
			<documentation>Container for BS7666 compliant external address (i.e. does not include any internal address details such as desk number)</documentation>
		</annotation>
	</element>
	<complexType name = "PersonName">
		<annotation>
			<documentation>Complex type defined to hold the elements required to define the name of a person.</documentation>
		</annotation>
		<sequence>
			<element ref = "pType:PersonTitle" minOccurs = "0"/>
			<element ref = "pType:FirstName"/>
			<element ref = "pType:MiddleName" minOccurs = "0" maxOccurs = "unbounded"/>
			<element ref = "pType:LastName"/>
			<element ref = "pType:FormerLastName" minOccurs = "0"/>
			<element ref = "pType:PreferredName" minOccurs = "0"/>
			<element ref = "pType:NameSuffix" minOccurs = "0"/>
			<element ref = "pType:Honorific" minOccurs = "0"/>
		</sequence>
	</complexType>
	<element name = "PersonTitle">
		<annotation>
			<documentation>Title relating to a person's name for example Mr, Mrs, Miss, Ms, Dr, Rev, Rt Hon etc</documentation>
		</annotation>
		<simpleType>
			<restriction base = "string">
				<maxLength value = "35"/>
				<minLength value = "1"/>
			</restriction>
		</simpleType>
	</element>
	<element name = "Availability" type = "string">
		<annotation>
			<documentation>Description of the availability of the Contact/Participant, by convention this should describe the days/hours when the Contact/Participant is available</documentation>
		</annotation>
	</element>
	<complexType name = "ShortContactDetails">
		<annotation>
			<documentation>Complex type defined to hold a set of contact details required in various places in Planning portal schemas. This can contain a preferred cotact medium, availability, address, internal location, e-mail, fax, and telephone numbers. </documentation>
		</annotation>
		<sequence>
			<element ref = "pType:Availability" minOccurs = "0"/>
			<element ref = "pType:ExternalAddress"/>
			<element ref = "pType:InternalLocation" minOccurs = "0"/>
			<element ref = "pType:Email" minOccurs = "0"/>
			<element ref = "pType:Fax" minOccurs = "0"/>
			<element ref = "pType:Telephone" maxOccurs = "unbounded"/>
		</sequence>
		<attribute name = "PreferredContactMedium" use = "required">
			<annotation>
				<documentation>Identification of which contact medium is preferred by the Contact/Participant</documentation>
			</annotation>
			<simpleType>
				<restriction base = "string">
					<enumeration value = "Post"/>
					<enumeration value = "E-Mail"/>
					<enumeration value = "Fax"/>
					<enumeration value = "Telephone"/>
				</restriction>
			</simpleType>
		</attribute>
	</complexType>
	<element name = "FirstName">
		<annotation>
			<documentation>First Name of Contact/Participant. Note this may not be the preferred name of the Contact/Participant, this is defined in the PreferredName element</documentation>
		</annotation>
		<simpleType>
			<restriction base = "string">
				<maxLength value = "35"/>
				<minLength value = "1"/>
			</restriction>
		</simpleType>
	</element>
	<element name = "MiddleName">
		<annotation>
			<documentation>Middle name of Contact/Participant</documentation>
		</annotation>
		<simpleType>
			<restriction base = "string">
				<maxLength value = "35"/>
				<minLength value = "1"/>
			</restriction>
		</simpleType>
	</element>
	<element name = "LastName">
		<annotation>
			<documentation>Last Name of Contact/Participant</documentation>
		</annotation>
		<simpleType>
			<restriction base = "string">
				<maxLength value = "35"/>
				<minLength value = "1"/>
			</restriction>
		</simpleType>
	</element>
	<element name = "FormerLastName">
		<annotation>
			<documentation>Former name of Contact/Participant - where a Contact/Participant was previously known with a different last name</documentation>
		</annotation>
		<simpleType>
			<restriction base = "string">
				<maxLength value = "35"/>
				<minLength value = "1"/>
			</restriction>
		</simpleType>
	</element>
	<element name = "PreferredName">
		<annotation>
			<documentation>Preferred Name of Contact/Participant - by convention this is applied where the preferred name differs from the First Name of the Contact/Participant and may duplicate a MiddleName element</documentation>
		</annotation>
		<simpleType>
			<restriction base = "string">
				<maxLength value = "70"/>
				<minLength value = "1"/>
			</restriction>
		</simpleType>
	</element>
	<element name = "NameSuffix">
		<annotation>
			<documentation>Suffix applied to the name of the Contact/Participant - examples being Esq., Junior</documentation>
		</annotation>
		<simpleType>
			<restriction base = "string">
				<maxLength value = "35"/>
				<minLength value = "1"/>
			</restriction>
		</simpleType>
	</element>
	<element name = "Honorific" type = "string">
		<annotation>
			<documentation>Honorific suffix applied to the name of the Contact/Participant - examples being MSc. PhD etc</documentation>
		</annotation>
	</element>
	<element name = "OrgName" type = "string">
		<annotation>
			<documentation>Name of Organisation</documentation>
		</annotation>
	</element>
	<element name = "InternalLocation" type = "string">
		<annotation>
			<documentation>Internal address details - this element is usually added to an external address to provide a full address, thus examples of an internal address include an office/desk number</documentation>
		</annotation>
	</element>
	<complexType name = "SiteType">
		<annotation>
			<documentation>Complex Type defined to hold, in a common place for all schemas, all the elements and attributes required to define a development site. </documentation>
		</annotation>
		<sequence>
			<element ref = "pType:ExternalAddress"/>
			<element ref = "pType:PresentUse"/>
			<element ref = "pType:Area"/>
		</sequence>
		<attribute name = "Easting" type = "integer">
			<annotation>
				<documentation>Ordnance Survey coordinate (X coordinate)</documentation>
			</annotation>
		</attribute>
		<attribute name = "Northing" type = "integer">
			<annotation>
				<documentation>Ordnance Survey coordinate (Y coordinate)</documentation>
			</annotation>
		</attribute>
		<attribute name = "VisibleFromRoadOrPublicLand" use = "required" type = "boolean">
			<annotation>
				<documentation>Identifies whether the site is visible from a public road or public land</documentation>
			</annotation>
		</attribute>
	</complexType>
	<element name = "PresentUse" type = "string">
		<annotation>
			<documentation>Unconstrained description of the present use of the site</documentation>
		</annotation>
	</element>
	<element name = "Area">
		<annotation>
			<documentation>Container for area details of the site.  Note this element follows the convention of enumerations (i.e. choice form a defined set of options) being defined as attributes, thus the element AreaUnit is defined as an attribute, and is associated with its corresponding attribute (AreaValue) indicating the number of units.
</documentation>
		</annotation>
		<complexType>
			<attribute name = "AreaValue" use = "required" type = "integer">
				<annotation>
					<documentation>Size of site - denominated in either square metres or hectares as identified by the associated AreaUnit</documentation>
				</annotation>
			</attribute>
			<attribute name = "AreaUnit" use = "required">
				<annotation>
					<documentation>Identification of whether the associated AreaValue is denominated in square metres or hectares</documentation>
				</annotation>
				<simpleType>
					<restriction base = "string">
						<enumeration value = "sq.metres"/>
						<enumeration value = "hectares"/>
					</restriction>
				</simpleType>
			</attribute>
		</complexType>
	</element>
	<element name = "Withdrawal">
		<annotation>
			<documentation>Container for the components of a withdrawal outcome (i.e. where a participant in an application/appeal withdraws from the case). As a minimum this must include the withdrawal date (as the attribute WithdrawalDate) and the referencing information for any products of the withdrawal (as the element ProductGMF)</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:ProductGMF"/>
				<element ref = "pType:WithdrawalReason" minOccurs = "0" maxOccurs = "unbounded"/>
			</sequence>
			<attribute name = "WithdrawalDate" use = "required" type = "date">
				<annotation>
					<documentation>Date of withdrawal by the participant from the application/appeal</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "WithdrawalReason" type = "string">
		<annotation>
			<documentation>Reason for the withdrawal. This is a sub-element of element Withdrawal, and it describes why the participant has withdrawn from the application/appeal</documentation>
		</annotation>
	</element>
	<complexType name = "Outcome">
		<annotation>
			<documentation>Compex Type defined to hold the components relating to the outcome of an appeal or application.</documentation>
		</annotation>
		<sequence>
			<element ref = "pType:Withdrawal" minOccurs = "0"/>
			<element ref = "pType:DecisionNotice" minOccurs = "0"/>
		</sequence>
	</complexType>
	<element name = "DecisionNotice">
		<annotation>
			<documentation>Container for the components of a decision notice (i.e. the notice issued when a decision is made in respect of an application/appeal). As a minimum this must include the date of the decision notice (as the attribute NoticeDate); the referencing information for any products of the decision notice (as the element ProductGMF); description of the relevant development(s) associated with a decision notice (as the element Relevant Development) and the contents of the decision itself (as either of the elements Grant or Deny)</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:ProductGMF"/>
				<element ref = "pType:DevPlanPolicies" minOccurs = "0"/>
				<element ref = "pType:RelevantDevelopment" maxOccurs = "unbounded"/>
				<choice>
					<element ref = "pType:Grant"/>
					<element ref = "pType:Deny"/>
				</choice>
			</sequence>
			<attribute name = "NoticeDate" use = "required" type = "date">
				<annotation>
					<documentation>Date of decision notice of the application/appeal</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "DevPlanPolicies">
		<annotation>
			<documentation>Container for Development Plan Policy components. The development plan is produced by the appropriate Local Authority and contains a number of specific (and referencable) policies</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:GenericDocComponent"/>
				<element ref = "pType:DevPlanPolicy" minOccurs = "0" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "GenericDocComponent" type = "pType:PINSGenericDocComponent">
		<annotation>
			<documentation>Container for document-type content. Where content of a document nature is required but has no pre-definable meaning this element is used. This allows authors to create rich content using familier document constructs such as headings, paragraphs, lists, references and graphics</documentation>
		</annotation>
	</element>
	<element name = "RelevantDevelopment">
		<annotation>
			<documentation>Container for the components of a the description of the relevant development associated with a decision notice. The relevant development is the development to which the decision notice relates.</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:GenericDocComponent"/>
				<element ref = "pType:Reference" minOccurs = "0" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<complexType name = "AssociatedComponentRef">
		<annotation>
			<documentation>This type provides a mechanism to reference an associated component (e.g. document, diagram) either as an internal reference to another element in a schema using the IDREF convention, or as a link to a resource outside of the schema. </documentation>
		</annotation>
		<sequence>
			<element ref = "pType:ExternalResourceRef"/>
		</sequence>
		<attribute name = "ComponentRef" use = "required" type = "IDREF">
			<annotation>
				<documentation>Reference to the unique Identifier of a component within the document. This should match exactly the value of a ComponentID within the document</documentation>
			</annotation>
		</attribute>
	</complexType>
	<element name = "Grant">
		<annotation>
			<documentation>Container for the components of a decision notice that are relevant if the decision is to grant permission.</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:Condition" minOccurs = "0" maxOccurs = "unbounded"/>
				<element ref = "pType:Informative" minOccurs = "0" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "Deny">
		<annotation>
			<documentation>Container for the deny-specific components of a decision notice</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:Reason" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "Reason">
		<annotation>
			<documentation>Description of a reason; also the container for the identifier of the reason and any references contained by the reason. This may be the reason for deying an application or appleal or the reason for a condition applied when granting a permission.</documentation>
		</annotation>
		<complexType mixed = "true">
			<choice>
				<element ref = "pType:Reference" minOccurs = "0" maxOccurs = "unbounded"/>
			</choice>
			<attribute ref = "pType:Identifier"/>
		</complexType>
	</element>
	<element name = "Condition">
		<annotation>
			<documentation>Description of a condition applied to the granting of a permission; also the container for the identifier of the condition and the reasons for applycing the condition. e.g. "The external walls must be made from red brick" </documentation>
		</annotation>
		<complexType mixed = "true">
			<choice>
				<element ref = "pType:Reason"/>
			</choice>
			<attribute ref = "pType:Identifier"/>
		</complexType>
	</element>
	<element name = "Informative">
		<annotation>
			<documentation>Description of an informative (provided for information); also the container for the identifier of the informative and any references contained by the informative</documentation>
		</annotation>
		<complexType mixed = "true">
			<choice>
				<element ref = "pType:Reference" minOccurs = "0" maxOccurs = "unbounded"/>
			</choice>
			<attribute ref = "pType:Identifier"/>
		</complexType>
	</element>
	<complexType name = "Fee">
		<annotation>
			<documentation>Complex type to contains details of a fee and payments and or refunds associated with an element. See the element using this type for the context of this fee. </documentation>
		</annotation>
		<sequence>
			<element ref = "pType:Justification" minOccurs = "0"/>
			<element ref = "pType:Payment" minOccurs = "0" maxOccurs = "unbounded"/>
			<element ref = "pType:Refund" minOccurs = "0" maxOccurs = "unbounded"/>
		</sequence>
		<attribute name = "Amount" use = "required" type = "decimal">
			<annotation>
				<documentation>Amount (sterling) of the fee</documentation>
			</annotation>
		</attribute>
		<attribute name = "LPAPaid" use = "required" type = "boolean">
			<annotation>
				<documentation>Identification of whether the LPA (Local Planning Authority) has been paid. This attribute is a boolean type and follows the convention that the value 1 denotes true/yes and the value 0 denotes false/no</documentation>
			</annotation>
		</attribute>
		<attribute name = "DueDate" type = "date">
			<annotation>
				<documentation>Identification of when the fee is due</documentation>
			</annotation>
		</attribute>
		<attribute name = "Exempt" use = "required" type = "boolean">
			<annotation>
				<documentation>Identification of whether an exemption exists relating to the fee. This attribute is a boolean type and follows the convention that the value 1 denotes true/yes and the value 0 denotes false/no</documentation>
			</annotation>
		</attribute>
	</complexType>
	<element name = "Justification" type = "string">
		<annotation>
			<documentation>Justification for the fee or refund</documentation>
		</annotation>
	</element>
	<element name = "Payment">
		<annotation>
			<documentation>Container for the components of the payment. As a minimum this must include the amount and receipt details</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:Receipt"/>
				<element ref = "pType:Remitter" minOccurs = "0"/>
			</sequence>
			<attribute name = "Amount" use = "required" type = "decimal">
				<annotation>
					<documentation>Amount (sterling) of the payment</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "Refund">
		<annotation>
			<documentation>Container for the components of a refund. This must include the amount, justification and payee details. The refund will relate to a fee associated with an application or appeal. See owning elements for context.</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:Justification"/>
				<element ref = "pType:Payee"/>
			</sequence>
			<attribute name = "Amount" use = "required" type = "decimal">
				<annotation>
					<documentation>Amount (sterling) of the refund</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "Payee">
		<annotation>
			<documentation>Container for the components of the Payee (i.e. recipient of the refund) who may be a person or an organisation</documentation>
		</annotation>
		<complexType>
			<choice>
				<element ref = "pType:PayeeOrganisation"/>
				<element ref = "pType:PayeePerson"/>
			</choice>
		</complexType>
	</element>
	<element name = "Remitter">
		<annotation>
			<documentation>Source of a payment - who may be a person or an organisation. </documentation>
		</annotation>
		<complexType>
			<choice>
				<element ref = "pType:RemitterOrganisation"/>
				<element ref = "pType:RemitterPerson"/>
			</choice>
		</complexType>
	</element>
	<element name = "Receipt">
		<annotation>
			<documentation>Container for the components of a payment receipt. This must include the ReceiptID (typically a receipt number) and the ReceiptDate</documentation>
		</annotation>
		<complexType>
			<attribute name = "ReceiptID" use = "required" type = "string">
				<annotation>
					<documentation>Identifier for the receipt. Typically this will be the receipt number</documentation>
				</annotation>
			</attribute>
			<attribute name = "ReceiptDate" use = "required" type = "date">
				<annotation>
					<documentation>Date of the receipt (this should be as denoted on the physical receipt)</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "PayeeOrganisation" type = "string">
		<annotation>
			<documentation>Name of the Payee's organisation</documentation>
		</annotation>
	</element>
	<element name = "PayeePerson" type = "pType:PersonName">
		<annotation>
			<documentation>Container for the components of the Payee name. As a minimum this must include the FirstName and LastName</documentation>
		</annotation>
	</element>
	<element name = "RemitterOrganisation" type = "string">
		<annotation>
			<documentation>Name of the Remitter's organisation</documentation>
		</annotation>
	</element>
	<element name = "RemitterPerson" type = "pType:PersonName">
		<annotation>
			<documentation>Container for the components of the remitter's name. As a minimum this must include the FirstName and LastName</documentation>
		</annotation>
	</element>
	<complexType name = "OwnershipAndInterestDeclaration">
		<annotation>
			<documentation>Complex type defined to hold the elements relating to the ownership and interest declaration that must be made with an application or appeal according to section 7 of the Town and Country Planning Act.</documentation>
		</annotation>
		<sequence>
			<element ref = "pType:SoleOwnership" minOccurs = "0"/>
			<element ref = "pType:OtherPartiesInterest" minOccurs = "0"/>
		</sequence>
	</complexType>
	<element name = "SoleOwnership">
		<annotation>
			<documentation>Container for the components of a declaration of sole ownership i.e the SignatureDetails (of the person claiming sole ownership)</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:SignatureDetails"/>
			</sequence>
		</complexType>
	</element>
	<element name = "SignatureDetails">
		<annotation>
			<documentation>Container for the components of the details of signature. Specifically this must incled the SignatureDate and the SignatoryName</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:Signatory"/>
			</sequence>
			<attribute name = "SignatureDate" use = "required" type = "date">
				<annotation>
					<documentation>Date of the signature</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "Signatory" type = "pType:PersonName">
		<annotation>
			<documentation>The name of the signatory. As a minimum this must include the signatory's FirstName and LastName. This is part of the SignatureDetails element.</documentation>
		</annotation>
	</element>
	<element name = "OtherPartiesInterest">
		<annotation>
			<documentation>Container for the components of a declaration of other parties interest</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:NoticeGiven" minOccurs = "0" maxOccurs = "unbounded"/>
				<element ref = "pType:NotNotified" minOccurs = "0"/>
			</sequence>
		</complexType>
	</element>
	<element name = "NoticeGiven">
		<annotation>
			<documentation>Container for the components of the definition of the notice given directly to other interested parties. This must include the recipient and date of the notice and the SignatureDetails of the person making the declaration</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:SignatureDetails"/>
				<element ref = "pType:NoticeRecipient"/>
			</sequence>
			<attribute name = "NoticeGivenDate" use = "required" type = "date">
				<annotation>
					<documentation>Date when the notice was given (by or on behalf of the person making thedeclaration) to the identified interested party</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "NoticeRecipient">
		<annotation>
			<documentation>Container for the components of the recipient of the notice. This must include the recipient's address and either the recipient's name (if the recipient is a person) or the name of the recipient organisation (if the recipient is an organisation)</documentation>
		</annotation>
		<complexType>
			<sequence>
				<choice>
					<element ref = "pType:NoticeRecipientOrganisation"/>
					<element ref = "pType:NoticeRecipientPerson"/>
				</choice>
				<element ref = "pType:NoticeRecipientAddress"/>
			</sequence>
		</complexType>
	</element>
	<element name = "NoticeRecipientOrganisation" type = "string">
		<annotation>
			<documentation>name of the organisation in receipt of the notice</documentation>
		</annotation>
	</element>
	<element name = "NoticeRecipientPerson" type = "pType:PersonName">
		<annotation>
			<documentation>Container for the components of the name of the person in receipt of the notice. As a minimum this must include the person's FirstName and LastName</documentation>
		</annotation>
	</element>
	<element name = "NoticeRecipientAddress" type = "bs7666:BSaddressStructure">
		<annotation>
			<documentation>Container for the components of the address of the recipient of the notice</documentation>
		</annotation>
	</element>
	<element name = "NotNotified">
		<annotation>
			<documentation>Container for the components of the definition of the actions taken to indirectly notify other interested parties. This must include a description of the steps taken and the SignatureDetails of the person making the declaration</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:NotificationStepsTaken"/>
				<element ref = "pType:Advertisement" minOccurs = "0" maxOccurs = "unbounded"/>
				<element ref = "pType:SignatureDetails"/>
			</sequence>
		</complexType>
	</element>
	<element name = "NotificationStepsTaken" type = "string">
		<annotation>
			<documentation>Description of the steps taken to notify other interested parties (by the person making the declaration)</documentation>
		</annotation>
	</element>
	<element name = "Advertisement">
		<annotation>
			<documentation>Container of the details of adverts placed by or on behalf of the person making a declaration of ownership aiming to notify other interested parties</documentation>
		</annotation>
		<complexType>
			<attribute name = "AdvertDate" use = "required" type = "date">
				<annotation>
					<documentation>Date of publication of the advert placed by or on behalf of the person making the declaration</documentation>
				</annotation>
			</attribute>
			<attribute name = "PublicationName" use = "required" type = "string">
				<annotation>
					<documentation>Name of the publication within which the advert was placed</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	
	<!--luflkuwelgbl;we;kq;x;mdfh;-->
	
	<element name = "Heading">
		<annotation>
			<documentation>Heading of a part of a document. The main part of the heading is included as text content within the Heading element, other parts may include an identifier for the heading or references.</documentation>
		</annotation>
		<complexType mixed = "true">
			<choice minOccurs = "0" maxOccurs = "unbounded">
				<element ref = "pType:Reference"/>
			</choice>
			<attribute ref = "pType:Identifier"/>
		</complexType>
	</element>
	<element name = "Para">
		<annotation>
			<documentation>Paragraph document. The main part of the paragraph is included as text content within the Para element, other parts may include an identifier for the paragraph or references and emphases (such as may be emboldened or italicised within the output).</documentation>
		</annotation>
		<complexType mixed = "true">
			<all minOccurs = "0" maxOccurs = "unbounded">
				<element ref = "pType:Emphasis" minOccurs = "0"/>
				<element ref = "pType:Reference" minOccurs = "0"/>
			</all>
			<attribute ref = "pType:Identifier"/>
		</complexType>
	</element>
	<element name = "GroupBody">
		<annotation>
			<documentation>Container for the main part (i.e. not the Header) of a Group (section) within a document. This may include paragraphs, lists and graphics</documentation>
		</annotation>
		<complexType>
			<all maxOccurs = "unbounded">
				<element ref = "pType:Para" minOccurs = "0"/>
				<element ref = "pType:OrderedList" minOccurs = "0"/>
				<element ref = "pType:UnorderedList" minOccurs = "0"/>
				<element ref = "pType:Graphic" minOccurs = "0"/>
			</all>
		</complexType>
	</element>
	<element name = "Group">
		<annotation>
			<documentation>A container for a section within a document. This contains the body of the section and possibly an associated header</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:Heading" minOccurs = "0"/>
				<element ref = "pType:GroupBody"/>
			</sequence>
		</complexType>
	</element>
	<element name = "MainBody">
		<annotation>
			<documentation>Container for the main part (i.e. not the Header) of a document. This may includes at least on Group (i.e. section)</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:Group" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "OrderedList">
		<annotation>
			<documentation>An ordered list within a document containing individual ListItems. Note that when this information is presented the ListItems will be numbered</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:ListItem" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "ListItem">
		<annotation>
			<documentation>Individual entry within a list. The main part of the ListItem is included as text content within the ListItem element, other parts may include an identifier for the item or references and emphases (such as may be emboldened or italicised within the output).</documentation>
		</annotation>
		<complexType mixed = "true">
			<all minOccurs = "0" maxOccurs = "unbounded">
				<element ref = "pType:Emphasis" minOccurs = "0"/>
				<element ref = "pType:Reference" minOccurs = "0"/>
			</all>
			<attribute ref = "pType:Identifier"/>
		</complexType>
	</element>
	<element name = "UnorderedList">
		<annotation>
			<documentation>An unordered list within a document containing individual ListItems. Note that when this information is presented the ListItems will not be numbered, but are likely to be bulleted</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:ListItem" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "Graphic" type = "pType:GraphicType">
		<annotation>
			<documentation>Container for a graphic referenced from within a document. This must include the information to link to the graphic</documentation>
		</annotation>
	</element>
	<element name = "Reference" type = "pType:GeneralReference">
		<annotation>
			<documentation>Container for the components of an internal (within the document) or an external reference</documentation>
		</annotation>
	</element>
	<element name = "Emphasis" type = "string">
		<annotation>
			<documentation>text content (within a paragraph or list item) which is to be emphasised when presented, typically this may be emboldened or italicised</documentation>
		</annotation>
	</element>
	<attribute name = "Identifier" type = "ID">
		<annotation>
			<documentation>Unique identifier for the element containing this attribute</documentation>
		</annotation>
	</attribute>
	<element name = "InternalResourceRef" type = "pType:InternalRef">
		<annotation>
			<documentation>Container for the components of an internal (within the document) reference to either a document or a component (i.e. an item which does not have a document nature, such as a geospatial object)</documentation>
		</annotation>
	</element>
	<element name = "ExternalResourceRef" type = "pType:ExternalLink">
		<annotation>
			<documentation>Container for the components of an external (outside the document) reference to either an online or offline resource</documentation>
		</annotation>
	</element>
	<complexType name = "GeneralReference">
		<annotation>
			<documentation>Complex type providing the facility to refer to a resource either within or outside of the schema. The context of what is being linked to is entirely dependant on the using element.</documentation>
		</annotation>
		<choice>
			<element ref = "pType:ExternalResourceRef"/>
			<element ref = "pType:InternalResourceRef"/>
		</choice>
	</complexType>
	<complexType name = "GraphicType">
		<annotation>
			<documentation>Complex type defined to hold the links required to reference a graphic exxternal to the schema.</documentation>
		</annotation>
		<sequence>
			<element ref = "pType:ExternalOnLineLink"/>
		</sequence>
	</complexType>
	<complexType name = "SpatialItem">
		<annotation>
			<documentation>Complex type defined to hold the elements required to either define, or provide reference to, a spacial item such as a map or a Geographical Information System element </documentation>
		</annotation>
		<choice>
			<element ref = "pType:LocalSpatialItem"/>
			<element ref = "pType:ExternalSpatialItem"/>
		</choice>
		<attribute ref = "pType:Identifier"/>
	</complexType>
	<element name = "LocalSpatialItem">
		<annotation>
			<documentation>Container for a geospatial item which is contained within the document. This must include an identifier for the appropriate map base associated with the item, also item components included within the element gmlPacket</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "mpak:gmlPacket"/>
			</sequence>
			<attribute name = "MapBaseID" use = "required" type = "string">
				<annotation>
					<documentation>Identifier for the map base associated with a geospatial item</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "ExternalSpatialItem">
		<annotation>
			<documentation>Container for a geospatial item which is external to the document and referenced from the document. This must include an identifier for the appropriate map base associated with the item, also the information required to link to the external item</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "pType:ExternalOnLineLink"/>
			</sequence>
			<attribute name = "MapBaseID" use = "required" type = "string">
				<annotation>
					<documentation>Identifier for the map base associated with a geospatial item</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<complexType name = "GMFMetadata">
		<annotation>
			<documentation>Complex type containing the attributes required for descriptive information about a document to be stored according to the GMF - Government Metadata Framework.</documentation>
		</annotation>
		<sequence>
			<element ref = "mdc:DublinCoreElementSet"/>
		</sequence>
	</complexType>
	<element name = "ProductGMF" type = "pType:GMFMetadata">
		<annotation>
			<documentation>Container for the referencing information (GMF Metadata) of the product of the decision or withrawal</documentation>
		</annotation>
	</element>
	<element name = "Fax">
		<annotation>
			<documentation>Container for the componenets of a fax number for the Contact/Participant. This must include The InternationalCode, NationalTelCode and LocalTelNo</documentation>
		</annotation>
		<complexType>
			<complexContent>
				<extension base = "pType:LineNo"/>
			</complexContent>
		</complexType>
	</element>
	<element name = "Telephone">
		<annotation>
			<documentation>Container for the componenets of a telephone number for the Contact/Participant. This must include the InternationalCode, NationalTelCode, LocalTelNo and an indication of whether this is the prefered Telephone number for the Contact/Participant</documentation>
		</annotation>
		<complexType>
			<complexContent>
				<extension base = "pType:LineNo">
					<attribute name = "PreferredTelephone" use = "required" type = "string">
						<annotation>
							<documentation>Identification of whether a telephone number is the preferred number for the Contact/Participant</documentation>
						</annotation>
					</attribute>
					<attribute name = "TelephoneType">
						<annotation>
							<documentation>Classification of the type of telephone associated with a telephone number</documentation>
						</annotation>
						<simpleType>
							<restriction base = "string">
								<enumeration value = "Office"/>
								<enumeration value = "Mobile"/>
								<enumeration value = "VoiceMail"/>
								<enumeration value = "Other"/>
							</restriction>
						</simpleType>
					</attribute>
				</extension>
			</complexContent>
		</complexType>
	</element>
	<element name = "DevPlanPolicy">
		<annotation>
			<documentation>Identifier of an individual development plan policy. This provides a reference to the policy.</documentation>
		</annotation>
		<complexType>
			<attribute name = "PolicyID" type = "ID"/>
		</complexType>
	</element>
</schema>